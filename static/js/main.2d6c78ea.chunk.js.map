{"version":3,"sources":["context/AuthContext.js","hooks/http.hook.js","pages/AuthPage.js","hooks/message.hook.js","components/Loader.js","components/LinkCard.js","pages/DetailPage.js","components/LinksList.js","pages/LinksPage.js","pages/СreatePage.js","hooks/auth.hook.js","components/Navbar.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","AuthPage","auth","useContext","text","window","M","toast","html","email","password","form","setForm","changerHandler","event","target","name","value","useEffect","updateTextFields","registerHandler","loginHandler","className","placeholder","id","type","onChange","htmlFor","style","marginRight","disabled","onClick","Loader","display","justifyContent","paddingTop","LinkCard","link","href","to","rel","from","clicks","Date","date","toLocaleDateString","DetailPage","setLink","linkId","useParams","getLink","Authorization","fetched","LinksList","links","length","map","index","_id","LinksPage","setLinks","featchLinks","CreatePage","history","useHistory","pressHandler","key","push","e","onKeyPress","storageName","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d6c78ea.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext ({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false \r\n})","import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback (async (url, method  = 'GET', body = null, headers={}) => {\r\n\r\n        setLoading(true)\r\n\r\n        try {\r\n\r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n\r\n            const response = await fetch(url, {method , body, headers})\r\n            const data = await response.json()\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data \r\n\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), []) \r\n\r\n    return { loading, request, error, clearError }\r\n}","import React, {useState, useEffect, useContext} from 'react'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport { useMessage } from '../hooks/message.hook'\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const {loading, request, error, clearError} = useHttp()\r\n    const [form, setForm] = useState({\r\n        email: '' , password: ''\r\n    })\r\n\r\n    const changerHandler = event => {\r\n        setForm({...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    },[])\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form})\r\n            message(data.message)\r\n        } catch (e) {}\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/login', 'POST', {...form})\r\n            auth.login(data.token, data.userId)\r\n        } catch (e) {}\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>Сократи Ссылку</h1>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Авторизация</span>\r\n                        <div>\r\n                            <div className=\"input-field\">\r\n                                <input placeholder=\"Введите email\" id=\"email\" type=\"text\" name=\"email\" className=\"yellow-input\" value={form.email} onChange={changerHandler}/>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"input-field\">\r\n                                <input placeholder=\"Введите пароль\" id=\"password\" type=\"password\" name=\"password\" className=\"yellow-input\" value={form.password} onChange={changerHandler}/>\r\n                                <label htmlFor=\"password\">Пароль</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button className=\"btn yellow darken-4\" style={{marginRight: 10}} disabled={loading} onClick={loginHandler}>Войти</button>\r\n                        <button className=\"btn grey lighten-1 black-text\" onClick={registerHandler} disabled={loading}>Регистрация</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useCallback} from 'react'\r\n\r\nexport const useMessage = () => {\r\n    return useCallback ( text => {\r\n        if (window.M && text) {\r\n            window.M.toast({html: text})\r\n        }\r\n    }, [])\r\n}\r\n","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n        <div style = {{display: 'flex',justifyContent: 'center' , paddingTop: '2rem'}}>\r\n            <div className=\"preloader-wrapper active\">\r\n                <div className=\"spinner-layer spinner-red-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\" />\r\n                    </div>\r\n                    <div className=\"gap-patch\">\r\n                        <div className=\"circle\" />\r\n                    </div>\r\n                    <div className=\"circle-clipper right\">\r\n                        <div className=\"circle\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n)\r\n\r\n","import React from 'react' \r\n\r\nexport const LinkCard = ({ link }) => {\r\n\r\n   return (\r\n   <> \r\n        <h2>Ссылка</h2>\r\n        <p>Ваша ссылка: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\r\n        <p>Откуда: <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\r\n        <p>Количество кликов по ссылке: <strong>{link.clicks}</strong></p>\r\n        <p>Дата создания: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\r\n        \r\n    </>\r\n    \r\n    )\r\n\r\n}","import React, {useCallback, useState, useContext, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport {Loader} from '../components/Loader'\r\nimport {LinkCard} from '../components/LinkCard'\r\n\r\nexport const DetailPage = () => {\r\n    const {token} = useContext(AuthContext)\r\n    const {request , loading} = useHttp()\r\n    const [link , setLink] = useState(null)\r\n    const linkId = useParams().id\r\n\r\n    const getLink = useCallback(async () => {\r\n        try {\r\n           const fetched = await request (`/api/link/${linkId}`, 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            setLink(fetched)\r\n        } catch (e) {}\r\n    },[token , linkId, request])\r\n\r\n    useEffect(() => {\r\n        getLink() \r\n    }, [getLink])\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !loading && link && <LinkCard link={link} /> }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const LinksList = ({ links }) => {\r\n    if (!links.length) {\r\n        return <p className=\"center\">Ссылок пока нет</p>\r\n    }\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Оригинальня</th>\r\n                <th>Сокращенная</th>\r\n                <th>Открыть</th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {links.map((link , index) => {\r\n                    return (\r\n                    <tr key={link._id}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{link.from}</td>\r\n                        <td>{link.to}</td>\r\n                        <td><Link to={`/detail/${link._id}`}>Открыть</Link></td>\r\n                    </tr>\r\n                    )\r\n                }) }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport {Loader} from '../components/Loader'\r\nimport {LinksList} from '../components/LinksList'\r\n\r\n\r\nexport const LinksPage = () => {\r\n    const [links, setLinks] = useState([]) \r\n    const{loading, request} = useHttp()\r\n    const{token} = useContext(AuthContext)\r\n\r\n    const featchLinks = useCallback( async () => {\r\n        try {\r\n           const fetched = await request('/api/link', 'GET', null, {\r\n               Authorization: `Bearer ${token}`\r\n           })\r\n           setLinks(fetched)\r\n        } catch (e) {}\r\n    }, [token, request])\r\n\r\n    useEffect (()=> {\r\n        featchLinks()\r\n    }, [featchLinks])\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n    return (\r\n        <>\r\n        {!loading && <LinksList links={links} />}\r\n        </>\r\n    )\r\n}","import React, {useState, useEffect, useContext} from 'react'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHttp } from '../hooks/http.hook'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nexport const CreatePage = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const {request} = useHttp()\r\n    const [link,setLink] = useState('')\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    },[])\r\n\r\n    const pressHandler = async event => {\r\n        if (event.key === 'Enter') {\r\n            try {\r\n                const data = await request('/api/link/generate', 'POST', {from: link}, {\r\n                  Authorization: `Bearer ${auth.token}`   \r\n                })\r\n                history.push(`/detail/${data.link._id}`)\r\n            } catch (e) {}\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\r\n                <div className=\"input-field\">\r\n                    <input placeholder=\"Введите ссылку\" id=\"link\" type=\"text\" value={link}  onChange={e => setLink(e.target.value)} onKeyPress={pressHandler}/>\r\n                    <label htmlFor=\"link\">Введите ссылку</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState (null)\r\n    const [ready, setReady] = useState (false)\r\n    const [userId, setUserId] = useState (null)\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }))\r\n    },[])\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n    },[])\r\n\r\n\r\n    useEffect( () => {\r\n        const data =  JSON.parse( localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n        setReady(true)\r\n    }, [login])\r\n\r\n\r\n    return { login, logout, token, userId , ready }\r\n}","import React, {useContext} from 'react'\r\nimport {NavLink,useHistory} from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\n\r\nexport const Navbar = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/')\r\n    }   \r\n\r\n    return (\r\n    <nav>\r\n        <div className=\"nav-wrapper blue darken-1\" style={{padding: '0 2rem'}}>\r\n        <span href=\"/\" className=\"brand-logo\">Сокращение ссылок</span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n            <li><NavLink to=\"/links\">Ссылки</NavLink></li>\r\n            <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n        </ul>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport { useRoutes } from './routes';\nimport { useAuth } from './hooks/auth.hook';\nimport { AuthContext } from './context/AuthContext';\nimport { Navbar } from './components/Navbar';\nimport { Loader } from './components/Loader';\nimport 'materialize-css'\n\n\nfunction App() {\n  const{token, login, logout , userId, ready} = useAuth()\n  const isAuthenticated = !!token \n  const routes=useRoutes(isAuthenticated)\n\n  if (!ready) {\n    return <Loader />\n  }\n\n  return (\n    \n    <AuthContext.Provider value={{token, login, logout , userId, isAuthenticated}}>\n      <Router>\n        { isAuthenticated &&  <Navbar/>}\n        <div className='container'>\n          {routes}\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;","import React from 'react'\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { AuthPage } from './pages/AuthPage';\r\nimport { DetailPage } from './pages/DetailPage';\r\nimport { LinksPage } from './pages/LinksPage';\r\nimport { CreatePage } from './pages/СreatePage';\r\n\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/links\" exact>\r\n                   <LinksPage/>\r\n                </Route>\r\n                <Route path=\"/create\" exact>\r\n                   <CreatePage/>\r\n                </Route>\r\n                <Route path=\"/detail/:id\">\r\n                   <DetailPage/>\r\n                </Route>\r\n                <Redirect to=\"/create\"/>\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage/>\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}